name: Build Electron App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  version-bump:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      
      - name: Enable Corepack and Yarn
        run: |
          corepack enable
          
      - name: Bump Version
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git fetch origin
          git pull --rebase origin main
          yarn version patch --immediate
          git add package.json
          git commit -m "Bump version [skip ci] [skip actions]"
          git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git

  build:
    needs: version-bump
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Setup Node.js and Python
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      - name: Enable Corepack and Yarn
        run: |
          corepack enable

      - name: Install Dependencies
        run: |
          yarn install --immutable
          
      - name: Build Web
        env:
          CI: ""
        run: |
          yarn build:web
        
      - name: Build TypeScript
        run: yarn build:electron
        
      - name: Build and Publish Electron App
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            yarn electron:package --mac --universal --publish always
          elif [ "${{ matrix.os }}" = "windows-latest" ]; then
            yarn electron:package --win --publish always
          else
            yarn electron:package --linux --publish always
          fi
        shell: bash

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-build
          path: |
            dist/*.deb
            dist/*.AppImage
            dist/*.dmg
            dist/*.exe
            dist/*.zip
          if-no-files-found: ignore
